name: Build Release

on:
  push:
    branches:
      - "!*"
    tags:
      - v*

jobs:
  metadata:
    runs-on: ubuntu-latest

    outputs:
      version: ${{ steps.get_version.outputs.version }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: paulhatch/semantic-version@v4
        id: get_version
        with:
          tag_prefix: "v"
          short_tags: true
          bump_each_commit: false

  docker:
    runs-on: ubuntu-latest

    needs: metadata

    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: famarvinroesch/kafka-merge-purge:${{ needs.metadata.outputs.version }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          build-args: |
            VERSION=${{ needs.metadata.outputs.version }}

  release:
    runs-on: ubuntu-latest

    needs: metadata

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Build with Gradle
        run: ./gradlew -PprojVersion="${{ needs.metadata.outputs.version }}" check shadowJar
      - name: Cleanup Gradle Cache
        # Remove some files from the Gradle cache, so they aren't cached by GitHub Actions.
        # Restoring these files from a GitHub Actions cache might cause problems for future builds.
        run: |
          rm -f ~/.gradle/caches/modules-2/modules-2.lock
          rm -f ~/.gradle/caches/modules-2/gc.properties
      - name: Rename artifact
        run: mv build/libs/kafka-merge-purge.jar "build/libs/kafka-merge-purge-${{ needs.metadata.outputs.version }}.jar"
      - uses: actions/upload-artifact@v2
        with:
          name: Application
          path: build/libs/kafka-merge-purge-${{ needs.metadata.outputs.version }}.jar
      # Changelog generator requires a package.json for legacy reasons
      - run: touch package.json
      - name: Changelog
        uses: scottbrenner/generate-changelog-action@master
        id: Changelog
      - name: Create Release
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: v${{ needs.metadata.outputs.version }}
          body: |
            ${{ steps.Changelog.outputs.changelog }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/libs/kafka-merge-purge-${{ needs.metadata.outputs.version }}.jar
          asset_name: kafka-merge-purge-${{ needs.metadata.outputs.version }}.jar
          asset_content_type: application/java-archive
